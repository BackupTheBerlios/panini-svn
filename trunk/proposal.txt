Proposal for an Integrated Translation Management Application
-------------------------------------------------------------

Synopsis: 

Translation of free & open source applications - like free & open source
applications themselves, depend on the whims of would-be
translators. There is a need for an application that will both cater to
the need of individual translators to 'scratch their itch' and translate
as much as they want of portions they want and at the same time allow
the application developer to coordinate the efforts of individuals and
maintain an adequate level of accuracy and consistency.

The application should cater to both sporadic or 'one-off' online
translation efforts and more consistent off-line efforts.

In addition the application should build a basic database of strings
with translations in the languages catered to - and offer either
automatic translation of strings already in the database, or hints for
already translated strings.

The application should, at a later stage cater to translation of
documentation - which has to be served to the translator para or section
wise unlike translation of source which is served string by string.

It goes without saying that the application should be free software,
multiplatform and multilingual. It is also clear that any such
application has to be web based.

Existing efforts:

We have investigated Rosetta [https://launchpad.net/rosetta], Pootle
[http://pootle.wordforge.org/] and Entrans [http://entrans.sf.net].
Rosetta is proprietory software. Pootle, written in python has the idea
correct, but it uses a filesystem to store everything and probably wont
scale. Entrans uses PHP and MySQL, which we feel are not stable or
secure enough for an application of this nature - and from the
documentation does not appear to have the comprehensive aims of this
project. However elements of it's user interface are good and could be
incorporated into this project.

Platform:

We propose using the Python scripting language with PostgreSQL RDBMS as
a backend. The webserver will be Apache. We will be using other tools
and frameworks not limited to Django, Subversion, Plone and Trac for
scripting various parts of the project. Both Python and PostgreSQL are
stable, mature and inherently secure and used worldwide on an immense
range of products and applications. Further, python being an easy to
master scripting language, more non-technical people will be encouraged
to hack at and contribute to the project.

Workflow:

The Application developer registers an application and uploads the POT file.
He also gives the file version. The application will treat each version of the
PO file as a different file. The developer may opt for automatic
translation, in which case all the strings available in the database will
be translated into all the languages available and saved as drafts.
Similarly, any translation by a non authorised translator will also be
saved as drafts as and when they are done. The developer, and anyone
authorised by him can approve of drafts, wholly or partially and merge them
into the official version. This official version will be presented to all
translators who wish to translate the file wholly or partially.

All translations of strings in all official versions will be added to the
database. In case of more than one translation of a string into a given
lanuguage, all translations will be added and it is left to individual
developers to choose the one they want.

There will be a facility for experts in particular languages to review the
database and cull out obviously incorrect translations, correct spellings,
mark any one translation as 'preferred' and remove almost identical duplic
ates. 

Translators will be able to use the online interface as well as upload
translations made offline. Submitting translations by email will also be
catered to, but this will not have an automatic interface. The developer
will have to accept responsibility for accepting email submissions and the
translator will have to get the consent of the developer to submit by
email.

Proposed Features:
------------------

Statistics:

The application will provide detailed statistics of the number of
strings translated. This can also be filtered according to the project,
language, translator as well as different project versions.

Online Review:

An system for reviewing the translations online will be present so as to
help trusted reviewers to just login to the system and review the
translations. 

Consistency Checking:

The application will automatically check the consistency of the
translations and will report errors if any for fixes. In case of a
broken translation, the official version will be switched to the last
sane translation until the broken [but newer] version is fixed and
committed.

Version Control:

A basic form of version control will be present in the app. It will be
able to track translations of the same application across different
versions and will also allow merging & diffing between the
versions. Also, it will make sure translations are never lost.

Downloads:

Translators will be able to download tarballs of translated files
according to projects, project versions and languages. This will help in
case they want to translate offline.

Translated UI:

The UI of the application itself will be translated into various indian
langauges so as to allow translators use the application in their own
native language.

Extensive Online Documentation:

Documentation is very important in a project and we will provide an
extensive documentation for the application so that it's easy for the
translators / admins to pick it up and start using.

Email Interface:

As already pointed out, we intend to provide an Email interface to the
application so that authenticated translators can recieve untranslated
strings and send translations by Email.

Screenshot Gallery:

There will be a screenhot gallery which will have screenshots of various
translated applications to inspire more people to join the i18n / l10n
scene as well as to show the status of translations for a particular
language / project.

Schedule:

We will have a server up and running with a basic version of the
application within a month of starting the project. Working with active
developers and translators, the application will be fine-tuned over a
period of 6 months to a year.

Proposed Roadmap:

01 Month:
   * Database structure and translation user interface - basic functionality
   * One language
   * Beta 1 release

03 Months:
   * Complete admin and user interface added
   * Any number of languages

06 Months:
   * Handling of diffs, statistics, reports - complete functionality
   * Beta 2 release.

08 Months:
   * Addition of email interface and interface for translation of documents
   * Bug fixes and UI translations into at least 3 languages.
   * First Release Candidate release.

10 Months:
   * Factoring
   * More UI Translations and documentation.
   * Second Release Candidate release.

11 Months:
   * Feature freeze.
   * Big fixes, UI translations.
   * More documentation.
   * Third Release Candidate release.

12 Months:
   * More bug fixing.
   * Clearing up Docs & UI translations.
   * First stable release.

The timeline is dependent on the amount of response we get from testers and
and translators - features will be added and modified in response to the
feedback.


  
Funding:

1. We'll initially require 6 months funding to create the application
   with the most important features. Preferably we'd like to receive an
   additional 6 months of funding to incorporate more advanced features
   like machine translation and other nifty things as well as doing a
   lot of bug fixing, achieve full UI translations and writing test
   cases, etc.
   
2. Hosting space with root access along with Subversion, Python, Apache
   mod_python, PostgreSQL and a few GB of diskspace - $400 per year is
   the going rate.   

Developers:

The developers are:

1. Baishampayan Ghose: A Computer Sci. & Engg. Student & a Free Software
   developer. I am an experienced Python developer and a active member
   of the Free Software community. I have some i18n experience while
   leading the Bengali translation effort of Debian-Installer &
   Drupal. I am also a member of the Free Software Foundation of India
   working committee.
   Email - b.ghose@gnu.org.in

2. Kenneth Gonsalves: An Free & Open source Developer. Resume is
   http://avsap.org.in
   Email - lawgon@thenilgiris.com

Other developers will be welcome to join the project which will initially
be hosted at berlios.de
